{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\User\\\\Desktop\\\\aa\\\\ShoppingCarte\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch}from'react-redux';import{getCartItems,removeCartItem// onSuccessBuy\n}from'../../../_actions/user_actions';import Axios from'axios';import Paypal from'../../utils/Paypal';import UserCardBlock from'./Sections/UserCard';import{Result,Empty}from'antd';function CartPage(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),ShowTotal=_useState2[0],setShowTotal=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),ShowSuccess=_useState4[0],setShowSuccess=_useState4[1];var dispatch=useDispatch();var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),Total=_useState6[0],setTotal=_useState6[1];useEffect(function(){var cartItems=[];if(props.user.userData&&props.user.userData.cart){if(props.user.userData.cart.length>0){props.user.userData.cart.forEach(function(item){cartItems.push(item.id);});dispatch(getCartItems(cartItems,props.user.userData.cart)).then(function(response){if(response.payload.length>0){calculateTotal(response.payload);}});}}},[props.user.userData]);var removeFromCart=function removeFromCart(productId){dispatch(removeCartItem(productId)).then(function(response){if(response.payload.cartDetail.length<=0){setShowTotal(false);}else{calculateTotal(response.payload.cartDetail);}});};var calculateTotal=function calculateTotal(cartDetail){var total=0;cartDetail.map(function(item){total+=parseInt(item.price,10)*item.quantity;});setTotal(total);setShowTotal(true);};// const transactionSuccess = (data) => {\n//     dispatch(onSuccessBuy({\n//         cartDetail: props.user.cartDetail,\n//         paymentData: data\n//     }))\n//         .then(response => {\n//             if (response.payload.success) {\n//                 setShowSuccess(true)\n//                 setShowTotal(false)\n//             }\n//         })\n// }\n// const transactionError = () => {\n//     console.log('Paypal error')\n// }\n// const transactionCanceled = () => {\n//     console.log('Transaction canceled')\n// }\nreturn/*#__PURE__*/React.createElement(\"div\",{style:{width:'85%',margin:'3rem auto'}},/*#__PURE__*/React.createElement(\"h1\",null,\"My Cart\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(UserCardBlock,{products:props.user.cartDetail,removeItem:removeFromCart}),ShowTotal?/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'3rem'}},/*#__PURE__*/React.createElement(\"h2\",null,\"Total Payment: $\",Total,\" \")):ShowSuccess?/*#__PURE__*/React.createElement(Result,{status:\"success\",title:\"Successfully Purchased Items\"}):/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%',display:'flex',flexDirection:'column',justifyContent:'center'}},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Empty,{description:false}),/*#__PURE__*/React.createElement(\"p\",null,\"No Items In the Cart\"))),ShowTotal&&/*#__PURE__*/React.createElement(Paypal,{toPay:Total// onSuccess={transactionSuccess}\n// transactionError={transactionError}\n// transactionCanceled={transactionCanceled}\n}));}export default CartPage;","map":{"version":3,"sources":["C:/Users/User/Desktop/aa/ShoppingCarte/client/src/components/views/ShoppingCartPage/ShoppingCartPage.js"],"names":["React","useEffect","useState","useDispatch","getCartItems","removeCartItem","Axios","Paypal","UserCardBlock","Result","Empty","CartPage","props","ShowTotal","setShowTotal","ShowSuccess","setShowSuccess","dispatch","Total","setTotal","cartItems","user","userData","cart","length","forEach","item","push","id","then","response","payload","calculateTotal","removeFromCart","productId","cartDetail","total","map","parseInt","price","quantity","width","margin","marginTop","display","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport {\n    getCartItems,\n    removeCartItem\n   // onSuccessBuy\n} from '../../../_actions/user_actions';\nimport Axios from 'axios';\nimport Paypal from '../../utils/Paypal';\nimport UserCardBlock from './Sections/UserCard';\nimport { Result, Empty } from 'antd';\n\n\nfunction CartPage(props) {\n    \n    const [ShowTotal, setShowTotal] = useState(false)\n    const [ShowSuccess, setShowSuccess] = useState(false)\n    const dispatch = useDispatch();\n    const [Total, setTotal] = useState(0)\n    \n\n    useEffect(() => {\n\n        let cartItems = [];\n        if (props.user.userData && props.user.userData.cart) {\n            if (props.user.userData.cart.length > 0) {\n                props.user.userData.cart.forEach(item => {\n                    cartItems.push(item.id)\n                });\n                dispatch(getCartItems(cartItems, props.user.userData.cart))\n                    .then((response) => {\n                        if (response.payload.length > 0) {\n                            calculateTotal(response.payload)\n                        }\n                    })\n            }\n        }\n\n    }, [props.user.userData])\n\n    const removeFromCart = (productId) => {\n\n        dispatch(removeCartItem(productId))\n            .then((response) => {\n                if (response.payload.cartDetail.length <= 0) {\n                    setShowTotal(false)\n                } else {\n                    calculateTotal(response.payload.cartDetail)\n                }\n            })\n    }\n\n    const calculateTotal = (cartDetail) => {\n        let total = 0;\n\n        cartDetail.map(item => {\n            total += parseInt(item.price, 10) * item.quantity\n        });\n\n        setTotal(total)\n        setShowTotal(true)\n    }\n\n\n   \n\n    // const transactionSuccess = (data) => {\n    //     dispatch(onSuccessBuy({\n    //         cartDetail: props.user.cartDetail,\n    //         paymentData: data\n    //     }))\n    //         .then(response => {\n    //             if (response.payload.success) {\n    //                 setShowSuccess(true)\n    //                 setShowTotal(false)\n    //             }\n    //         })\n    // }\n\n    // const transactionError = () => {\n    //     console.log('Paypal error')\n    // }\n\n    // const transactionCanceled = () => {\n    //     console.log('Transaction canceled')\n    // }\n\n\n    return (\n        <div style={{ width: '85%', margin: '3rem auto' }}>\n            <h1>My Cart</h1>\n            <div>\n\n                <UserCardBlock\n                    products={props.user.cartDetail}\n                    removeItem={removeFromCart}\n                />\n\n\n                {ShowTotal ?\n                    <div style={{ marginTop: '3rem' }}>\n                        <h2>Total Payment: ${Total} </h2>\n                    </div>\n                    :\n                    ShowSuccess ?\n                        <Result\n                            status=\"success\"\n                            title=\"Successfully Purchased Items\"\n                        /> :\n                        <div style={{\n                            width: '100%', display: 'flex', flexDirection: 'column',\n                            justifyContent: 'center'\n                        }}>\n                            <br />\n                            <Empty description={false} />\n                            <p>No Items In the Cart</p>\n\n                        </div>\n                 } \n            </div>\n\n\n\n            {/* Paypal Button */}\n\n            {ShowTotal &&\n\n                <Paypal\n                    toPay={Total}\n                   // onSuccess={transactionSuccess}\n                   // transactionError={transactionError}\n                   // transactionCanceled={transactionCanceled}\n                />\n\n            }\n\n\n\n        </div>\n    )\n}\n\nexport default CartPage\n"]},"metadata":{},"sourceType":"module"}