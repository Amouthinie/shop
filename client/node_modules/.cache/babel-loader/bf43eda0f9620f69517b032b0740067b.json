{"ast":null,"code":"//here is the place , change the state of an appliation, bcz state is immutable\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER, ADD_TO_CART_USER, GET_CART_ITEMS_USER, REMOVE_CART_ITEM_USER // ON_SUCCESS_BUY_USER\n} from '../_actions/types'; //The state can only be changed by emitting an action.\n// The state tree is never mutated directly instead you use pure functions called reducers. \n//A reducer takes the current state tree and an action as arguments and returns the resulting (to execute the next state)state tree.\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    //the action type for user register is REGISTER_USER\n    case REGISTER_USER:\n      //previousState + action = new state\n      return { ...state,\n        register: action.payload\n      };\n\n    case LOGIN_USER:\n      return { ...state,\n        successLogin: action.payload,\n        isAdmin: action.payload\n      };\n\n    case AUTH_USER:\n      return { ...state,\n        userData: action.payload\n      };\n\n    case LOGOUT_USER:\n      return { ...state\n      };\n\n    case ADD_TO_CART_USER:\n      return { ...state,\n        userData: { ...state.userData,\n          cart: action.payload\n        }\n      };\n\n    case GET_CART_ITEMS_USER:\n      return { ...state,\n        cartDetail: action.payload\n      };\n\n    case REMOVE_CART_ITEM_USER:\n      return { ...state,\n        cartDetail: action.payload.cartDetail,\n        userData: { ...state.userData,\n          cart: action.payload.cart\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/AF_Project_ShoppingCart/ShoppingCart/client/src/_reducers/user_reducer.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART_USER","GET_CART_ITEMS_USER","REMOVE_CART_ITEM_USER","state","action","type","register","payload","successLogin","isAdmin","userData","cart","cartDetail"],"mappings":"AAAA;AACA,SACIA,UADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,WAJJ,EAKIC,gBALJ,EAMIC,mBANJ,EAOIC,qBAPJ,CAQG;AARH,OASO,mBATP,C,CAYA;AACA;AACA;;AACA,eAAe,UAAUC,KAAK,GAAG,EAAlB,EAAsBC,MAAtB,EAA8B;AAEzC,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAKR,aAAL;AACI;AACA,aAAO,EAAE,GAAGM,KAAL;AAAYG,QAAAA,QAAQ,EAAEF,MAAM,CAACG;AAA7B,OAAP;;AACJ,SAAKX,UAAL;AACI,aAAO,EAAE,GAAGO,KAAL;AAAYK,QAAAA,YAAY,EAAEJ,MAAM,CAACG,OAAjC;AAA0CE,QAAAA,OAAO,EAAEL,MAAM,CAACG;AAA1D,OAAP;;AACJ,SAAKT,SAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAYO,QAAAA,QAAQ,EAAEN,MAAM,CAACG;AAA7B,OAAP;;AACJ,SAAKR,WAAL;AACI,aAAO,EAAE,GAAGI;AAAL,OAAP;;AACJ,SAAKH,gBAAL;AACI,aAAO,EACH,GAAGG,KADA;AACOO,QAAAA,QAAQ,EAAE,EAChB,GAAGP,KAAK,CAACO,QADO;AAEhBC,UAAAA,IAAI,EAAEP,MAAM,CAACG;AAFG;AADjB,OAAP;;AAOJ,SAAKN,mBAAL;AACI,aAAO,EACH,GAAGE,KADA;AACOS,QAAAA,UAAU,EAAER,MAAM,CAACG;AAD1B,OAAP;;AAIJ,SAAKL,qBAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHS,QAAAA,UAAU,EAAER,MAAM,CAACG,OAAP,CAAeK,UAFxB;AAGHF,QAAAA,QAAQ,EAAE,EACN,GAAGP,KAAK,CAACO,QADH;AAENC,UAAAA,IAAI,EAAEP,MAAM,CAACG,OAAP,CAAeI;AAFf;AAHP,OAAP;;AAWJ;AACI,aAAOR,KAAP;AArCR;AAuCH","sourcesContent":["//here is the place , change the state of an appliation, bcz state is immutable\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART_USER,\n    GET_CART_ITEMS_USER,\n    REMOVE_CART_ITEM_USER\n   // ON_SUCCESS_BUY_USER\n} from '../_actions/types';\n\n\n//The state can only be changed by emitting an action.\n// The state tree is never mutated directly instead you use pure functions called reducers. \n//A reducer takes the current state tree and an action as arguments and returns the resulting (to execute the next state)state tree.\nexport default function (state = {}, action) {\n    \n    switch (action.type) {\n        //the action type for user register is REGISTER_USER\n        case REGISTER_USER:\n            //previousState + action = new state\n            return { ...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, successLogin: action.payload, isAdmin: action.payload }\n        case AUTH_USER:\n            return { ...state, userData: action.payload }\n        case LOGOUT_USER:\n            return { ...state }\n        case ADD_TO_CART_USER:\n            return {\n                ...state, userData: {\n                    ...state.userData,\n                    cart: action.payload\n                }\n            }\n            \n        case GET_CART_ITEMS_USER:\n            return {\n                ...state, cartDetail: action.payload\n            }\n\n        case REMOVE_CART_ITEM_USER:\n            return {\n                ...state,\n                cartDetail: action.payload.cartDetail,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n\n            }\n       \n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}