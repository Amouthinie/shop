{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\User\\\\Desktop\\\\aa\\\\ShoppingCarte\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";//here is the place , change the state of an appliation, bcz state is immutable\nimport{LOGIN_USER,REGISTER_USER,AUTH_USER,LOGOUT_USER,ADD_TO_CART_USER,GET_CART_ITEMS_USER,REMOVE_CART_ITEM_USER// ON_SUCCESS_BUY_USER\n}from'../_actions/types';//The state can only be changed by emitting an action.\n// The state tree is never mutated directly instead you use pure functions called reducers. \n//A reducer takes the current state tree and an action as arguments and returns the resulting (to execute the next state)state tree.\nexport default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){//the action type for user register is REGISTER_USER\ncase REGISTER_USER://previousState + action = new state\nreturn _objectSpread(_objectSpread({},state),{},{register:action.payload});case LOGIN_USER:return _objectSpread(_objectSpread({},state),{},{successLogin:action.payload,isAdmin:action.payload});case AUTH_USER:return _objectSpread(_objectSpread({},state),{},{userData:action.payload});case LOGOUT_USER:return _objectSpread({},state);case ADD_TO_CART_USER:return _objectSpread(_objectSpread({},state),{},{userData:_objectSpread(_objectSpread({},state.userData),{},{cart:action.payload})});case GET_CART_ITEMS_USER:return _objectSpread(_objectSpread({},state),{},{cartDetail:action.payload});case REMOVE_CART_ITEM_USER:return _objectSpread(_objectSpread({},state),{},{cartDetail:action.payload.cartDetail,userData:_objectSpread(_objectSpread({},state.userData),{},{cart:action.payload.cart})});default:return state;}}","map":{"version":3,"sources":["C:/Users/User/Desktop/aa/ShoppingCarte/client/src/_reducers/user_reducer.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART_USER","GET_CART_ITEMS_USER","REMOVE_CART_ITEM_USER","state","action","type","register","payload","successLogin","isAdmin","userData","cart","cartDetail"],"mappings":"8KAAA;AACA,OACIA,UADJ,CAEIC,aAFJ,CAGIC,SAHJ,CAIIC,WAJJ,CAKIC,gBALJ,CAMIC,mBANJ,CAOIC,qBACD;AARH,KASO,mBATP,CAYA;AACA;AACA;AACA,cAAe,WAA8B,IAApBC,CAAAA,KAAoB,2DAAZ,EAAY,IAARC,CAAAA,MAAQ,2CAEzC,OAAQA,MAAM,CAACC,IAAf,EACI;AACA,IAAKR,CAAAA,aAAL,CACI;AACA,sCAAYM,KAAZ,MAAmBG,QAAQ,CAAEF,MAAM,CAACG,OAApC,GACJ,IAAKX,CAAAA,UAAL,CACI,sCAAYO,KAAZ,MAAmBK,YAAY,CAAEJ,MAAM,CAACG,OAAxC,CAAiDE,OAAO,CAAEL,MAAM,CAACG,OAAjE,GACJ,IAAKT,CAAAA,SAAL,CACI,sCAAYK,KAAZ,MAAmBO,QAAQ,CAAEN,MAAM,CAACG,OAApC,GACJ,IAAKR,CAAAA,WAAL,CACI,wBAAYI,KAAZ,EACJ,IAAKH,CAAAA,gBAAL,CACI,sCACOG,KADP,MACcO,QAAQ,gCACXP,KAAK,CAACO,QADK,MAEdC,IAAI,CAAEP,MAAM,CAACG,OAFC,EADtB,GAOJ,IAAKN,CAAAA,mBAAL,CACI,sCACOE,KADP,MACcS,UAAU,CAAER,MAAM,CAACG,OADjC,GAIJ,IAAKL,CAAAA,qBAAL,CACI,sCACOC,KADP,MAEIS,UAAU,CAAER,MAAM,CAACG,OAAP,CAAeK,UAF/B,CAGIF,QAAQ,gCACDP,KAAK,CAACO,QADL,MAEJC,IAAI,CAAEP,MAAM,CAACG,OAAP,CAAeI,IAFjB,EAHZ,GAWJ,QACI,MAAOR,CAAAA,KAAP,CArCR,CAuCH","sourcesContent":["//here is the place , change the state of an appliation, bcz state is immutable\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART_USER,\n    GET_CART_ITEMS_USER,\n    REMOVE_CART_ITEM_USER\n   // ON_SUCCESS_BUY_USER\n} from '../_actions/types';\n\n\n//The state can only be changed by emitting an action.\n// The state tree is never mutated directly instead you use pure functions called reducers. \n//A reducer takes the current state tree and an action as arguments and returns the resulting (to execute the next state)state tree.\nexport default function (state = {}, action) {\n    \n    switch (action.type) {\n        //the action type for user register is REGISTER_USER\n        case REGISTER_USER:\n            //previousState + action = new state\n            return { ...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, successLogin: action.payload, isAdmin: action.payload }\n        case AUTH_USER:\n            return { ...state, userData: action.payload }\n        case LOGOUT_USER:\n            return { ...state }\n        case ADD_TO_CART_USER:\n            return {\n                ...state, userData: {\n                    ...state.userData,\n                    cart: action.payload\n                }\n            }\n            \n        case GET_CART_ITEMS_USER:\n            return {\n                ...state, cartDetail: action.payload\n            }\n\n        case REMOVE_CART_ITEM_USER:\n            return {\n                ...state,\n                cartDetail: action.payload.cartDetail,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart\n                }\n\n            }\n       \n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}