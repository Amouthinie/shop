{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\User\\\\Desktop\\\\aa\\\\ShoppingCarte\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";//Component for Login Page\nimport{Formik}from'formik';import*as Yup from'yup';import{Form,Icon,Input,Button,Checkbox,Typography}from'antd';import{useDispatch}from\"react-redux\";import React,{useState}from\"react\";import{withRouter}from\"react-router-dom\";import{loginUser}from\"../../../_actions/user_actions\";//import AdminPage from './views/AdminPage/AdminPage';\nvar Title=Typography.Title;function LoginPage(props){var dispatch=useDispatch();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),formErrorMessage=_useState2[0],setFormErrorMessage=_useState2[1];return/*#__PURE__*/React.createElement(Formik,{initialValues:{email:'',password:''},validationSchema:Yup.object().shape({email:Yup.string().email('Email Id is invalid').required('Email Id is required'),password:Yup.string().min(6,'Password must have at least 6 characters').required('Password is required')}),onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;setTimeout(function(){var dataToSubmit={email:values.email,password:values.password};//in redux, dispatch is an action used to change the state\ndispatch(loginUser(dataToSubmit)).then(function(response){if(response.payload.successLogin){//window.localStorage.setItem('userId', response.payload.userId);\n//history.push. , it pushes a new entry into the history stack\n// - means redirecting the user to home route.\n//if its admin redirect to admin page\n//  if (response.payload.isAdmin) {\nif(response.payload.role===1){props.history.push(\"/admin\");}else if(response.payload.role===2){props.history.push(\"/StoreManager\");}else{props.history.push(\"/\");}//if fail to login\n}else{setFormErrorMessage('Fail to login, Check out The Email or Password again');}}).catch(function(err){setFormErrorMessage('Fail to login, Check out The Email or Password again');setTimeout(function(){setFormErrorMessage(\"\");},3000);});setSubmitting(false);},500);}},function(props){var values=props.values,touched=props.touched,errors=props.errors,dirty=props.dirty,isSubmitting=props.isSubmitting,handleChange=props.handleChange,handleBlur=props.handleBlur,handleSubmit=props.handleSubmit,handleReset=props.handleReset;return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(Title,{level:2},\"Log In\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit,style:{width:'500px'}},/*#__PURE__*/React.createElement(Form.Item,{required:true},/*#__PURE__*/React.createElement(Input,{id:\"email\",prefix:/*#__PURE__*/React.createElement(Icon,{type:\"user\",style:{color:'rgba(0,0,0,.25)'}}),placeholder:\"Enter  email\",type:\"email\",value:values.email,onChange:handleChange,onBlur:handleBlur,className:errors.email&&touched.email?'text-input error':'text-input'}),errors.email&&touched.email&&/*#__PURE__*/React.createElement(\"div\",{className:\"input-feedback\"},errors.email)),/*#__PURE__*/React.createElement(Form.Item,{required:true},/*#__PURE__*/React.createElement(Input,{id:\"password\",prefix:/*#__PURE__*/React.createElement(Icon,{type:\"lock\",style:{color:'rgba(0,0,0,.25)'}}),placeholder:\"Enter Password\",type:\"password\",value:values.password,onChange:handleChange,onBlur:handleBlur,className:errors.password&&touched.password?'text-input error':'text-input'}),errors.password&&touched.password&&/*#__PURE__*/React.createElement(\"div\",{className:\"input-feedback\"},errors.password)),formErrorMessage&&/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"p\",{style:{color:'#ff0000bf',fontSize:'0.7rem',border:'1px solid',padding:'1rem',borderRadius:'10px'}},formErrorMessage)),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\",className:\"login-form-button\",style:{minWidth:'100%'},disabled:isSubmitting,onSubmit:handleSubmit},\"Log in\")),\"Or \",/*#__PURE__*/React.createElement(\"a\",{href:\"/register\"},\"register now!\"),/*#__PURE__*/React.createElement(\"a\",{className:\"login-form-forgot\",href:\"/reset_user\",style:{float:'right'}},\"Forgot Password\"))));});};export default withRouter(LoginPage);","map":{"version":3,"sources":["C:/Users/User/Desktop/aa/ShoppingCarte/client/src/components/views/LoginPage/LoginPage.js"],"names":["Formik","Yup","Form","Icon","Input","Button","Checkbox","Typography","useDispatch","React","useState","withRouter","loginUser","Title","LoginPage","props","dispatch","formErrorMessage","setFormErrorMessage","email","password","object","shape","string","required","min","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","successLogin","role","history","push","catch","err","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","width","color","fontSize","border","padding","borderRadius","minWidth","float"],"mappings":"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","sourcesContent":["//Component for Login Page\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\n//import AdminPage from './views/AdminPage/AdminPage';\n\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  \n  const dispatch = useDispatch();\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email Id is invalid')\n          .required('Email Id is required'),\n\n        password: Yup.string()\n          .min(6, 'Password must have at least 6 characters')\n          .required('Password is required'),\n\n      })}\n\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          //in redux, dispatch is an action used to change the state\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.successLogin) {\n                //window.localStorage.setItem('userId', response.payload.userId);\n                //history.push. , it pushes a new entry into the history stack\n                // - means redirecting the user to home route.\n                //if its admin redirect to admin page\n              //  if (response.payload.isAdmin) {\n                if (response.payload.role === 1) {\n                  props.history.push(\"/admin\");\n              } \n              else if (response.payload.role === 2) {\n                props.history.push(\"/StoreManager\");\n              }\n              else{\n                props.history.push(\"/\");\n              }\n              \n              //if fail to login\n             } else {\n                setFormErrorMessage('Fail to login, Check out The Email or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Fail to login, Check out The Email or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n\n\n        return (\n          \n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '500px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter  email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter Password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                \n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  Forgot Password\n                  </a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n"]},"metadata":{},"sourceType":"module"}